#include <DS1302RTC.h>
#include <Time.h>
#define ledPin 8
#define RTCpin 10
#int hour
#int minute
#int second

DS1302RTC start_rtc(2,3,4);

void setup() {
  pinMode(RTCpin, INPUT);
  pinMode(ledPin, OUTPUT);
  start_rtc.halt(false);
  start_rtc.writeProtect(false);
  
  Serial.print("Initial Time: ");
  Serial.print(start_rtc.getDOWStr()); //요일
  Serial.print(" ");
  Serial.print(start_rtc.getDateStr()); //날짜
  Serial.print(" -- ");
  Serial.print(start_rtc.getTimeStr()); //시간 
  
  hour = start_rtc.getHours;
  minute = start_rtc.getMinutes;
  second = start_rtc.getSeconds;
  
  digitalWrite(ledpin, HIGH);
}

void loop()
{
  digitalClockDisplay();
  delay(1000);
}

void digitalClockDisplay()
{
  
  Serial.print(hour());
  printDigits(minute());
  printDigits(second());
  Serial.print(" ");
  Serial.print(day());
  Serial.print(" ");
  Serial.print(month());
  Serial.print(" ");
  Serial.print(year());
  Serial.println(); 

  if(hour == hour() && minute == minute() && second == second())
    digitalWrite(ledpin, HIGH);
  else if(hour == hour()+12 && minute == minute() && second == second())
    digitalWrite(ledpin, LOW);
}

void printDigits(int digits) {
  Serial.print(":");
  if(digits < 10)
    Serial.print('0');
  Serial.print(digits);
}

// RTC 모듈 배송되면 회로 연결하면서 제대로 실행되는지 확인해봐야 할 것 같습니다.
// 대략적인 code 구현만 한 상태임으로 compile 오류 발생할 수 도 있습니다.
// 발생하는 오류는 이후에 수정하도록 하겠습니다. 

//수정, RTC 시간에 따라(12시간마다 on/off) LED 제어 가능하도록 수정 하였습니다. 
#include <DS1302RTC.h>
#include <Time.h>
#include <TimeLib.h>
#define ledPin 8
//#int hour
//#int minute
//#int second

DS1302RTC start_rtc(2,3,4);

void setup() {

  //digitalWrite(//DS1302_GND_PIN// , LOW);
  //pinMode(//DS1302_GND_PIN//, OUTPUT);

  //digitalWrite(//DS1302_VCC_PIN//, HIGH);
  //pinMode(//DS1302_VCC_PIN//, OUTPUT);
  pinMode(ledPin,OUTPUT);
  Serial.begin(9600);
  Serial.println("RTC module acitvated");
  Serial.println();
  delay(500);

   if (start_rtc.haltRTC()) {
    Serial.println("The DS1302 is stopped.  Please run the SetTime");
    Serial.println("example to initialize the time and begin running.");
    Serial.println();
  }

  if (!start_rtc.writeEN()) {
    Serial.println("The DS1302 is write protected. This normal.");
    Serial.println();
  }

  delay(5000);
  tmElements_t tm;
  tm.Year = CalendarYrToTm(2018);
  tm.Month = 11;
  tm.Day = 21;
  tm.Wday = 3;
  tm.Hour = 00;
  tm.Minute = 00;
  tm.Second = 00;
if (start_rtc.write(tm) == 0) {
  time_t t = makeTime(tm);
  setTime(t);
}
}

void loop()
{
  tmElements_t tm;

  Serial.print("UNIX TIME: ");
  Serial.println(start_rtc.get());
  
  if (!start_rtc.read(tm)) {
    Serial.print(year());
    Serial.print("-");
    Serial.print(month());
    Serial.print("-");
    Serial.print(day());
    Serial.print("/");
    Serial.print(hour());
    Serial.print(":");
    Serial.print(minute());
    Serial.print(":");
    Serial.println(second());
  } 
  else {
    Serial.print("DS1302 read error! Please check the circuitry.");
    Serial.println();
    delay(9000);
  }
  delay(1000);
  LED_contol();
  
}

void printDigits(int digits) {
  Serial.print(":");
  if(digits < 10)
    Serial.print('0');
  Serial.print(digits);
}

void LED_contol(){
  if(hour()<12)
  digitalWrite(ledPin,HIGH);
  else
  digitalWrite(ledPin,LOW);
}
///////////////////////////////////////////////////////////////
#include <DS1302.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#define ledPin 8

DS1302 rtc(2,3,4);
//LiquidCrystal_I2C lcd(0x3F,2,1,0,4,5,6,7,3,POSITIVE);

void setup(){
  
  pinMode(ledPin,OUTPUT);
  Serial.begin(9600);
  //lcd.begin(16,2);
  //lcd.backlight();

 // rtc.halt(false);
 // rtc.writeProtect(false);
  

  //rtc.setDOW(SUNDAY);
  //rtc.setTime(10,8,0);
 // rtc.setDate(12,11,2018);
}
void loop(){
  Serial.print(rtc.getDOWStr());
  Serial.print(rtc.getDateStr());
  Serial.print("--");
  Serial.println(rtc.getTimeStr());

  //lcd.clear();
  data();
  printTime();
  delay(1000);
  LED_contol();
}

void data(){
  //lcd.setCursor(0,0);
  //lcd.print(rtc,getDOWStr());
  //lcd.setCursor(3,1);
  //lcd.print(rtc.getDateStr());
  
}

void printTime(){
  //lcd.setCursor(8,0);
  //lcd.print(rtc.getTimeStr());
  
}

void LED_contol(){
  if(hour()<12)
  digitalWrite(ledPin,HIGH);
  else
  digitalWrite(ledPin,LOW);
